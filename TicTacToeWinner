class TicTacToeWinner {
    public String tictactoe(int[][] moves) {
        int n = 3;
        
        // Count rows, cols, and diagonals
        int[] rows = new int[n];
        int[] cols = new int[n];
        int diag = 0, antiDiag = 0;

        // A -> +1, B -> -1
        int player = 1;  

        for (int[] move : moves) {
            int r = move[0], c = move[1];
            
            rows[r] += player;
            cols[c] += player;
            
            if (r == c) diag += player;
            if (r + c == n - 1) antiDiag += player;

            // Check if someone wins
            if (Math.abs(rows[r]) == n || Math.abs(cols[c]) == n || 
                Math.abs(diag) == n || Math.abs(antiDiag) == n) {
                return player == 1 ? "A" : "B";
            }

            // Switch player
            player *= -1;
        }

        // If all cells are filled
        if (moves.length == n * n) {
            return "Draw";
        }
        
        return "Pending";
    }

    public static void main(String[] args) {
        TicTacToeWinner game = new TicTacToeWinner();

        int[][] moves1 = {{0,0},{2,0},{1,1},{2,1},{2,2}};
        System.out.println(game.tictactoe(moves1)); // Output: A

        int[][] moves2 = {{0,0},{1,1},{0,1},{0,2},{1,0},{2,0}};
        System.out.println(game.tictactoe(moves2)); // Output: B

        int[][] moves3 = {{0,0},{1,1},{2,0},{1,0},{1,2},{2,1},{0,1},{0,2},{2,2}};
        System.out.println(game.tictactoe(moves3)); // Output: Draw
    }
}
